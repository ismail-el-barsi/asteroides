version: "3"

services:
  # --- SERVICES KAFKA ESSENTIELS ---
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,INTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, INTERNAL://kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "asteroid-data:3:1,planet-data:1:1,collision-alerts:1:1"
      KAFKA_LOG_RETENTION_BYTES: 1073741824
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8092:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=Asteroid-Tracker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  # --- SERVICES HADOOP ---
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode

  # --- SERVICES SPARK ---
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    depends_on:
      - namenode

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  # --- APPLICATION ASTEROIDES ---
  asteroid-app:
    build: ./app
    container_name: asteroid-app
    ports:
      - "8050:8050"
    depends_on:
      - kafka
      - namenode
      - spark-master
    environment:
      - KAFKA_SERVERS=kafka:9092
      - HDFS_HOST=namenode
      - SPARK_MASTER=spark://spark-master:7077

volumes:
  asteroid_data:
  hadoop_namenode:
  hadoop_datanode: